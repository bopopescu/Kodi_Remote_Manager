
import base64, codecs
thecrew = 'import sys
import os
from os.path import join
import urllib
import urllib2
import re
import webbrowser
import arrow

# use std kodi modules
import xbmc
import xbmcaddon
import xbmcplugin
import xbmcgui
from xbmcplugin import endOfDirectory, addDirectoryItem
import koding
from koding import Add_Dir

# import my stuff
from resources.lib._addon import *
from resources.lib._common import *
from resources.lib import clean_name

import resolveurl as RESOLVE

chkV = (xbmc.getInfoLabel('System.BuildVersion'))
if chkV.startswith('17'):
    myPath = sys.path[0]
else:
    myPath = os.path.dirname(__file__)

##### global Time variables #####

tFormat = 'YYYY-MM-DD HH:mm ZZZ'

utcNow = arrow.utcnow()
defaultTime = arrow.utcnow()
localDateTime = arrow.now()

utcZone = 'UTC'
#   siteZone = 'EST'
#   sdZone = 'PST'

siteZone = 'US/Eastern'
sdZone = 'US/Pacific'
myZone = 'Europe/London'
#addonZone = sdZone

addonZone = setting('zoneInfo')

localDateTime.format(tFormat)
siteTime = defaultTime.to(siteZone)
sdTime = defaultTime.to(sdZone)
myTime = defaultTime.to(myZone)

# Get the plugin url in plugin:// notation.
#    pluginUrl = sys.argv[0]
# Get the plugin handle as an integer number.
#    pluginHandle = int(sys.argv[1])

# default artwork setup - un hash to use std addon artwork
#      myIcon= xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.jpg'))
#      myThumb= xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.jpg'))
#      myWall = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))

# default artwork setup
#    addonPath = sys.path[0]
#    addonPath1 = join('special://home/addons',addon_id)
#            artPath = join('special://home/addons/' + addon_id,'resources/art')
artPath = join(myPath, 'resources/art')
ICON = 'live.png'       # used in menus
ICON2 = 'live.png'     # used in playlinks
ICON3 = 'nfl.png'
ICON4 = 'nhl.png'
ICON5 = 'nba.png'
ICON6 = 'ncaaf.png'
ICON7 = 'wwe.png'
ICON8 = 'mma.png'
ICON9 = 'mlb.png'
ICON10 = 'fifa.png'
ICON11 = 'pga.png'
ICON12 = 'tennis.png'
ICON13 = 'boxing.png'
ICON14 = 'ncaa-basketball.png'
ICON15 = 'xfl.png'
ICON16 = 'cricket.png'
ICON17 = 'volleyball.png'
ICON18 = 'nascar.png'
ICON19 = 'tabletennis.png'
ICON20 = 'handball.png'

WALL = 'wall.jpg'

myIcon = join(artPath, ICON)
myIcon2 = join(artPath, ICON2)
myIcon3 = join(artPath, ICON3)
myIcon4 = join(artPath, ICON4)
myIcon5 = join(artPath, ICON5)
myIcon6 = join(artPath, ICON6)
myIcon7 = join(artPath, ICON7)
myIcon8 = join(artPath, ICON8)
myIcon9 = join(artPath, ICON9)
myIcon10 = join(artPath, ICON10)
myIcon11 = join(artPath, ICON11)
myIcon12 = join(artPath, ICON12)
myIcon13 = join(artPath, ICON13)
myIcon14 = join(artPath, ICON14)
myIcon15 = join(artPath, ICON15)
myIcon16 = join(artPath, ICON16)
myIcon17 = join(artPath, ICON17)
myIcon18 = join(artPath, ICON18)
myIcon19 = join(artPath, ICON19)
myIcon20 = join(artPath, ICON20)

myThumb = join(artPath, ICON)
myWall = join(artPath, WALL)


def index():
    print 'Index mode'

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]TESTING[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 152
    Menu(title, '', mode, myIcon12, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 2000
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 3000
    Menu(title, '', mode, myIcon15, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 1000
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MLB[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 4000
    Menu(title, '', mode, myIcon9, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 5000
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA-F[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 6000
    Menu(title, '', mode, myIcon6, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA-B[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 8000
    Menu(title, '', mode, myIcon14, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]UFC[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 7000
    Menu(title, '', mode, myIcon8, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]BOXING[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 9000
    Menu(title, '', mode, myIcon13, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]FIFA-SOCCER[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 10000
    Menu(title, '', mode, myIcon10, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]TENNIS[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 11000
    Menu(title, '', mode, myIcon12, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NASCAR[/COLOR] [COLOR orchid](NL)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 126
    Menu(title, '', mode, myIcon18, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]FORMULA 1[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 144
    Menu(title, '', mode, myIcon, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]CRICKET[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 114
    Menu(title, '', mode, myIcon16, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]VOLLEY BALL[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 118
    Menu(title, '', mode, myIcon17, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]E SPORTS[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 116
    Menu(title, '', mode, myIcon, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]TABLE TENNIS[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 128
    Menu(title, '', mode, myIcon19, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]HANDBALL[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 130
    Menu(title, '', mode, myIcon20, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]VARIOUS SPORTS[/COLOR] [COLOR orchid]LIVE[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 12000
    Menu(title, '', mode, myIcon2, myWall, '', '', '')


def nba():
    print 'Index mode'

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](60)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 70
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](7S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 76
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](AS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 134
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](CS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 60
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 104
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 136
    Menu(title, '', mode, myIcon5, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 88
    Menu(title, '', mode, myIcon5, myWall, '', '', '')
    
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NBA LIVE[/COLOR] [COLOR orchid](6S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 156
    Menu(title, '', mode, myIcon5, myWall, '', '', '')


def nfl():
    print 'Index mode'

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](60)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 72
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    #title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](7S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    #mode = 74
    # Menu(title,'',mode,myIcon3,myWall,'','','')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](CS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 42
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](VK)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 48
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](VL)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 64
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 90
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NFL LIVE[/COLOR] [COLOR orchid](6S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 160
    Menu(title, '', mode, myIcon3, myWall, '', '', '')


def xfl():
    print 'Index mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL LIVE[/COLOR] [COLOR orchid](AS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 132
    Menu(title, '', mode, myIcon15, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL LIVE[/COLOR] [COLOR orchid](CS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 124
    Menu(title, '', mode, myIcon15, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL LIVE[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 148
    Menu(title, '', mode, myIcon3, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 120
    Menu(title, '', mode, myIcon15, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL LIVE[/COLOR] [COLOR orchid](VK)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 76
    Menu(title, '', mode, myIcon15, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]XFL LIVE[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 96
    Menu(title, '', mode, myIcon15, myWall, '', '', '')


def mlb():
    print 'Index mode'

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR orchid](7S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 13
    Menu(title, '', mode, myIcon9, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR orchid](PS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 10
    Menu(title, '', mode, myIcon9, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 122
    Menu(title, '', mode, myIcon9, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR orchid](VK)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 52
    Menu(title, '', mode, myIcon9, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MLB LIVE[/COLOR] [COLOR orchid](YS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 32
    Menu(title, '', mode, myIcon9, myWall, '', '', '')


def nhl():
    print 'Index mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](7S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 8
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](FN)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 68
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 110
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 140
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](VK)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 54
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 92
    Menu(title, '', mode, myIcon4, myWall, '', '', '')
    
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL LIVE[/COLOR] [COLOR orchid](6S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 158
    Menu(title, '', mode, myIcon4, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NHL REPLAYS[/COLOR][/B][COLOR orchid]*[/COLOR]'
    mode = 26
    Menu(title, '', mode, myIcon4, myWall, '', '', '')


def ncaa():
    print 'Index Mode'
    #title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR orchid](YS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    #mode = 30
    # Menu(title,'',mode,myIcon6,myWall,'','','')
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR orchid](CS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 44
    Menu(title, '', mode, myIcon6, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 138
    Menu(title, '', mode, myIcon6, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR orchid](VL)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 66
    Menu(title, '', mode, myIcon6, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR orchid](VK)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 56
    Menu(title, '', mode, myIcon6, myWall, '', '', '')
    
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA FOOTBALL[/COLOR] [COLOR orchid](6S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 162
    Menu(title, '', mode, myIcon6, myWall, '', '', '')


def ncaab():
    print 'Index Mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA MENS BASEKETBALL LIVE[/COLOR] [COLOR orchid](7S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 78
    Menu(title, '', mode, myIcon14, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA MENS BASEKETBALL LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 106
    Menu(title, '', mode, myIcon14, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA MENS BASEKETBALL LIVE[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 86
    Menu(title, '', mode, myIcon14, myWall, '', '', '')
    
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]NCAA MENS BASEKETBALL LIVE[/COLOR] [COLOR orchid](6S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 164
    Menu(title, '', mode, myIcon14, myWall, '', '', '')


def ufc():
    print 'Index Mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]UFC LIVE[/COLOR] [COLOR orchid](60)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 84
    Menu(title, '', mode, myIcon8, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]UFC LIVE[/COLOR] [COLOR orchid](CS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 40
    Menu(title, '', mode, myIcon8, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]UFC LIVE[/COLOR] [COLOR orchid](VK)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 62
    Menu(title, '', mode, myIcon8, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]UFC LIVE[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 146
    Menu(title, '', mode, myIcon8, myWall, '', '', '')


def boxing():
    print 'Index Mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]BOXING LIVE[/COLOR] [COLOR orchid](CS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 58
    Menu(title, '', mode, myIcon13, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]BOXING LIVE[/COLOR] [COLOR orchid](QA)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 142
    Menu(title, '', mode, myIcon13, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]BOXING LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 102
    Menu(title, '', mode, myIcon13, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]BOXING LIVE[/COLOR] [COLOR orchid](6S)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 154
    Menu(title, '', mode, myIcon13, myWall, '', '', '')


def fifa():
    print 'Index Mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]SOCCER FROM ALL OVER[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 112
    Menu(title, '', mode, myIcon10, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]MAJOR LEAGUE SOCCER[/COLOR] [COLOR orchid](MLS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 20
    Menu(title, '', mode, myIcon10, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]EUROPEAN SOCCER[/COLOR] [COLOR orchid](60)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 80
    Menu(title, '', mode, myIcon10, myWall, '', '', '')


def tennis():
    print 'Index Mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]TENNIS LIVE[/COLOR] [COLOR orchid](SE)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 108
    Menu(title, '', mode, myIcon12, myWall, '', '', '')


    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]TENNIS LIVE[/COLOR] [COLOR orchid](TL)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 152
    Menu(title, '', mode, myIcon12, myWall, '', '', '')



def various():
    print 'Index Mode'
    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]VARIOUS SPORTS[/COLOR] [COLOR orchid](HS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 15
    Menu(title, '', mode, myIcon2, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]LIVE VARIOUS CHANNELS[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 82
    Menu(title, '', mode, myIcon2, myWall, '', '', '')

    title = '[COLOR orchid]*[/COLOR] [B][COLOR white]TRENDING CHANNELS[/COLOR] [COLOR orchid](YSS)[/COLOR][/B] [COLOR orchid]*[/COLOR]'
    mode = 94
    Menu(title, '', mode, myIcon2, myWall, '', '', '')


# FUNCTIONS FROM HERE
######################
def main():
    return
######################


def streamNHL720():
    from resources.lib import stream720
    nhl720List = stream720.getNHL()
    if not nhl720List:
        print 'No NHL Games Available'
        thisMess = '[COLOR red][I]Links are normally active 45 mins before event time'+'\n'+'\n' + \
            '[COLOR orchid]'+'                                   ' + \
            'Click OK to quit[/I][/COLOR]'
        koding.OK_Dialog(title='NHL Games not available....', message=thisMess)
        nhl()
    for items in nhl720List:
        game = items.get('game', 'Game Missing')
        stream = items.get('stream', 'Stream Missing')
        quality = items.get('quality', 'Quality Missing')

        cName = '[COLOR orchid]' + \
            str(game) + '[/COLOR] [COLOR orchid][I](' + \
            str(quality) + 'k)' + '[/I][/COLOR]'
        cLink = stream
        icon = myIcon4

        Play(cName, cLink, 3, icon, myWall, '', '', '')

    return

######################


def playOffStreamMLBSchedule():
    games_list = []
    from resources.lib import playoffstreamsMLB
    games_list = playoffstreamsMLB.getMLBList()
    for game in games_list:
        title = game.get('title', 'Title Missing')
        time = game.get('time', 'Time Missing')

        if 'MLB NETWORK' in title. upper():
            cName = '[COLOR orchid]' + '24x7 ' + '[COLOR orchid]' + \
                str(title). replace('Live Stream', '') + '[/COLOR]'
        elif not 'MLB NETWORK' in title.upper():
            print ''
            print ('PJ DEBUG inside elif mlb not seen - cName = ' + cName)
            print ('PJ DEBUG inside elif mlb not seen - title = ' + title)
            print ('PJ DEBUG inside elif mlb not seen - time = ' + time)
            #    tempTime = str (time)
            #    tempTime1 = arrow.get(time, 'YYYY-MM-DD HH:mm')
            #    print ('PJ DEBUG - tempTime = ' + str (tempTime))
            #    print ('PJ DEBUG - tempTime1 = ' + tempTime1.format(tFormat))

            evStime1 = arrow.get(time, 'YYYY-MM-DD HH:mm')

            print ('PJ DEBUG trying set evStime1 = ' + str(evStime1))

            evStime = evStime1.replace(tzinfo=siteZone)
            uGtime = evStime.to(siteZone)
            #uGtime1 = uGtime.to(sdZone)
            #uGtime2 = uGtime.to(myZone)

            schedTime = uGtime.to(addonZone)

            print ('PJ DEBUG else reset time zone - localDateTime = ' +
                   str(localDateTime))
            print ('PJ DEBUG else reset time zone - evStime = ' + str(evStime))
            print ('PJ DEBUG else reset time zone - evStime = ' + str(evStime))
            print ('PJ DEBUG else reset time zone - uGtime = ' + str(uGtime))
            print ('PJ DEBUG else reset time zone - schedTime = ' + str(schedTime))

            #    time = 'Live at ' + time.split (' ')[-1] + '(EST)'

            cName = '[COLOR white]' + schedTime.strftime('%d-%b ') + '[COLOR orchid]' + schedTime.strftime(
                '%H:%M (%Z)') + ' [COLOR orchid]'+str(title). replace('Live', ''). strip() + '[/COLOR]'
            print ('PJ DEBUG mlb not seen - cName set in else = ' + cName)

        else:
            print ('PJ DEBUG mlb not seen - cName not set - now in else = ' + cName)

        if not cName:
            #    pass
            cName = '[COLOR red]' + str(time) + ' [COLOR orchid]' + \
                str(title). replace('Live', ''). strip() + '[/COLOR]'
            print ('PJ DEBUG mlb not seen - cName set in if not at end = ' + cName)

        Menu(cName, title, 5, myIcon9, myWall, '', '', '')

######################


def streamplayOffStreamMLB(name):
    from resources.lib import playoffstreamsMLB
    stream = playoffstreamsMLB.getStream(name)
    if stream:
        for i in stream:
            title = i['title']
            cLink = i['stream']
            quality = i['quality']
            cName = cName = '[COLOR white]' + \
                str(quality) + '[/COLOR] [COLOR orchid]' + \
                str(title) + '[/COLOR]'
            Play(cName, cLink, 3, myIcon9, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        mlb()


def mlsliveold():
    from resources.lib import mlsTest
    game_list = mlsTest.get_game()
    if game_list:
        for i in game_list:
            cName = i['title']
            cLink = i['link']
            Menu(cName, cLink, 21, myIcon10, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        mlb()


def mlslive():
    from resources.lib import mlsTest
    game_list = mlsTest.readMLS()

    if game_list:
        for items in game_list:
            game = items.get('game', 'Game Missing')
            stream = items.get('stream', 'Stream Missing')
            schedule = items.get('schedule', 'Schedule Missing')

            #    evStime1 = arrow.get(schedule, 'YYYY-MM-DDTHH:mm')
            #    evStime = evStime1.replace(tzinfo=utcZone)
            schedTime = schedule.to(addonZone)

            art = items.get('art', 'Art Missing')
            cName = '[COLOR white]' + schedTime.strftime('%d %b ') + '[/COLOR][COLOR orchid]' + schedTime.strftime(
                '%H:%M (%Z) ') + '[COLOR orchid]' + game + '[/COLOR]'
            cLink = stream
            if not 'missing' in art.lower():
                icon = art
            else:
                icon = myIcon10

            Menu(cName, cLink, 21, icon, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        mlb()


def playmls(link):
    from resources.lib import mlsTest
    m3u8 = mlsTest.get_stream(link)
    if m3u8:
        Play('[COLOR orchid]*[/COLOR] [B][COLOR white]Play Stream[/COLOR][/B] [COLOR orchid]*[/COLOR]',
             m3u8, 3, myIcon10, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        mlb()
######################


def sixtyfpsnba():
    from resources.lib import sixtyfpsnba as nba
    games = nba.get_games()
    if games:
        for game in games:
            title = game.get("title", "Title Missing")
            link = game.get("link", "Link Missing")
            Menu(title, link, 71, myIcon5, myWall, '', '', '')
    else:
        pass


def playsixtyfpsnba(url):
    from resources.lib import sixtyfpsnba as nba
    stream = nba.get_stream(url)
    if stream:
        for i in stream:
            title = i.get("title", "Title Missing")
            stream = i.get("url", "Url Missing")
            Play(title, stream, 3, myIcon5, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        nba()
######################
######################


def sixtyfpsnfl():
    from resources.lib import sixtyfpsnfl as nfl
    games = nfl.get_games()
    if games:
        for game in games:
            title = game.get("title", "Title Missing")
            link = game.get("link", "Link Missing")
            Menu(title, link, 73, myIcon3, myWall, '', '', '')
    else:
        pass


def playsixtyfpsnfl(url):
    from resources.lib import sixtyfpsnfl as nfl
    stream = nfl.get_stream(url)
    if stream:
        for i in stream:
            title = i.get("title", "Title Missing")
            stream = i.get("url", "Url Missing")
            Play(title, stream, 3, myIcon3, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        nfl()
######################
######################


def sixtyfpssoccer():
    from resources.lib import sixtyfpssoccer as soccer
    games = soccer.get_games()
    if games:
        for game in games:
            title = game.get("title", "Title Missing")
            link = game.get("link", "Link Missing")
            Menu(title, link, 81, myIcon10, myWall, '', '', '')
    else:
        pass


def playsixtyfpssoccer(url):
    from resources.lib import sixtyfpssoccer as soccer
    stream = soccer.get_stream(url)
    if stream:
        for i in stream:
            title = i.get("title", "Title Missing")
            stream = i.get("url", "Url Missing")
            Play(title, stream, 3, myIcon10, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        fifa()


def sixtyfpsufc():
    from resources.lib import sixtyfpsufc as ufc
    games = ufc.get_games()
    if games:
        for game in games:
            title = game.get("title", "Title Missing")
            link = game.get("link", "Link Missing")
            Menu(title, link, 85, myIcon8, myWall, '', '', '')
    else:
        pass


def playsixtyfpsufc(url):
    from resources.lib import sixtyfpsufc as ufc
    stream = ufc.get_stream(url)
    if stream:
        for i in stream:
            title = i.get("title", "Title Missing")
            stream = i.get("url", "Url Missing")
            Play(title, stream, 3, myIcon8, myWall, '', '', '')
    else:
        koding.OK_Dialog(
            '[COLOR orchid]*[/COLOR] [B][COLOR white]Stream not available yet[/COLOR][/B] [COLOR orchid]*[/COLOR]', message='Try again Later')
        ufc()

######################


def seventwentynfl():
    from resources.lib import seventwentynfl as nfl
    game_list = nfl.get_games()
    if game_list:
        for game in game_list:
            title = game.get("title", "Title Missing")
       '
doesnt = ''
do = ''
drama = ''
respect = '\x72\x6f\x74\x31\x33'
usandyou = eval('\x74\x68\x65\x63\x72\x65\x77') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x6f\x65\x73\x6e\x74\x2c\x20\x72\x65\x73\x70\x65\x63\x74\x29') + eval('\x64\x6f') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x72\x61\x6d\x61\x2c\x20\x72\x65\x73\x70\x65\x63\x74\x29')
eval(compile(base64.b64decode(eval('\x75\x73\x61\x6e\x64\x79\x6f\x75')),'<string>','exec'))